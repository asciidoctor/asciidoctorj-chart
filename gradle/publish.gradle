apply plugin: 'de.marcphilipp.nexus-publish'

publishing {
    publications.create(project.ext.publicationName, MavenPublication) {

        from components.java

        pom {
            name = project.name
            description = project.description
            url = 'https://github.com/asciidoctor/asciidoctorj-chart'
            inceptionYear = '2013'
            licenses {
                license {
                    name = 'The Apache Software License, Version 2.0'
                    url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution = 'repo'
                }
            }
            issueManagement {
                system = 'github'
                url = 'https://github.com/asciidoctor/asciidoctorj-chart/issues'
            }
            scm {
                url = 'https://github.com/asciidoctor/asciidoctorj-chart'
            }
            developers {
                developer {
                    id = 'cokr'
                    name = 'Constantin Kr√ºger'
                    email = 'github@constantn-krueger.com'
                    timezone = '1'
                    roles = ['Project Lead']
                }
            }
        }
    }
}
// QUESTION should we move manifest creation to general Java plugin config?
jar {
    manifest {
        attributes \
       'Built-By': System.properties['user.name'],
        'Created-By': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})".toString(),
        'Build-Date': buildDateOnly,
        //'Build-Time': buildTimeOnly,
        //'Specification-Title': project.name,
        //'Specification-Version': project.version,
        //'Specification-Vendor': 'asciidoctor.org',
        'Implementation-Title': project.name,
        'Implementation-Version': project.version,
        'Implementation-Vendor': 'asciidoctor.org'
    }
}

publishing {
    repositories {
        maven {
            name = "local"
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "${rootProject.buildDir}/repos/releases"
            def snapshotsRepoUrl = "${rootProject.buildDir}/repos/snapshots"
            url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = findProperty("nexusUsername") ?: System.getenv("OSSRH_USERNAME")
            password = findProperty("nexusPassword") ?: System.getenv("OSSRH_PASSWORD")
        }
    }
}
